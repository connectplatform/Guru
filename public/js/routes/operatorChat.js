// Generated by CoffeeScript 1.3.3
(function() {

  define(["app/server", "app/notify", "routes/sidebar", "templates/sidebar", "templates/chatMessage"], function(server, notify, sidebar, sbTemp, chatMessage) {
    return function(args, templ) {
      if (!server.cookie('session')) {
        window.location = '/';
      }
      return server.ready(function(services) {
        console.log("server is ready-- services availible: " + services);
        return server.getMyChats(function(err, chats) {
          var appendChat, chat, id, _i, _j, _len, _len1;
          for (_i = 0, _len = chats.length; _i < _len; _i++) {
            chat = chats[_i];
            chat.renderedId = chat.id.replace(/:/g, '-');
          }
          sidebar({}, sbTemp);
          $('#content').html(templ({
            chats: chats
          }));
          $('#chatTabs').click(function(e) {
            e.preventDefault();
            return $(this).tab('show');
          });
          $('#chatTabs a:first').tab('show');
          for (_j = 0, _len1 = chats.length; _j < _len1; _j++) {
            chat = chats[_j];
            id = chat.id;
            console.log("attatching methods to #" + chat.renderedId);
            $("#" + chat.renderedId + " .message-form").submit(function(evt) {
              var message;
              evt.preventDefault();
              message = $("#" + chat.renderedId + " .message-form .message").val();
              if (message !== "") {
                server[id](message, function(err, data) {
                  if (err && (typeof console !== "undefined" && console !== null)) {
                    return console.log(err);
                  }
                });
                $("#" + chat.renderedId + " .message-form .message").val("");
                $("#" + chat.renderedId + " .chat-display-box").scrollTop($("#" + chat.renderedId + " .chat-display-box").prop("scrollHeight"));
              }
              return false;
            });
            appendChat = function(err, data) {
              if (err) {
                console.log("Error appending chat: " + err);
              }
              return $("#" + chat.renderedId + " .chat-display-box").append(chatMessage(data));
            };
            console.log(server.subscribe[id].listeners);
            if (server.subscribe[id].listeners.length === 0) {
              server.subscribe[id](appendChat);
            }
          }
          return $(window).bind('hashchange', function() {
            var _k, _len2, _results;
            _results = [];
            for (_k = 0, _len2 = chats.length; _k < _len2; _k++) {
              chat = chats[_k];
              _results.push(server.subscribe[id](function() {}));
            }
            return _results;
          });
        });
      });
    };
  });

}).call(this);
